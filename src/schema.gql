# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  id: String!
  name: String!
}

type User {
  id: String!
  roleId: String!
  username: String!
  password: String!
  displayName: String
  role: Role!
}

type Mood {
  nature: Int!
  relax: Int!
  history: Int!
  culture: Int!
  party: Int!
}

type Tour {
  id: String!
  travelId: String!
  name: String!
  startingDate: String!
  endingDate: String!
  price: Float!
  travel: Travel!
}

type Travel {
  id: String!
  isPublic: Boolean!
  slug: String!
  name: String!
  description: String!
  numberOfDays: Int!
  img: String!
  moods: Mood!
  tours: [Tour!]!
}

type PaginatedToursResult {
  tours: [Tour!]!
  total: Int!
  page: Int!
  limit: Int!
}

type PaginatedTravelsResult {
  travels: [Travel!]!
  total: Int!
  page: Int!
  limit: Int!
}

type LoginResponse {
  token: String!
  user: User!
}

input MoodInput {
  nature: Int!
  relax: Int!
  history: Int!
  culture: Int!
  party: Int!
}

type Query {
  """Get user by ID"""
  getUserById(id: String!): User

  """Get all users"""
  getAllUsers: [User!]!

  """Get tour by ID"""
  getTourById(id: String!): Tour

  """Get all tours"""
  getAllTours(page: Int! = 0, limit: Int! = 10, priceFrom: Int, priceTo: Int, startingDate: String, endingDate: String, sortBy: String): PaginatedToursResult!

  """Get travel by ID"""
  getTravelById(id: String!): Travel

  """Get all travels"""
  getAllTravels(page: Int! = 0, limit: Int! = 10): PaginatedTravelsResult!
}

type Mutation {
  createUser(createUserData: CreateUserInput!): User!
  createTour(createTourData: CreateTourInput!): Tour!
  updateTour(updateTourData: UpdateTourInput!): Tour!
  deleteTour(id: String!): Travel!
  createTravel(createTravelData: CreateTravelInput!): Travel!
  updateTravel(updateTravelData: UpdateTravelInput!): Travel!
  deleteTravel(id: String!): Travel!
  login(loginUserInput: LoginUserInput!): LoginResponse!
}

input CreateUserInput {
  username: String!
  displayName: String
  password: String!
  roleName: String! = "user"
}

input CreateTourInput {
  travelId: String!
  name: String!
  startingDate: String!
  endingDate: String!
  price: Int!
}

input UpdateTourInput {
  id: String!
  name: String
  startingDate: String
  endingDate: String
  price: Int
}

input CreateTravelInput {
  slug: String
  name: String!
  isPublic: Boolean! = false
  img: String
  description: String!
  numberOfDays: Int!
  moods: MoodInput!
}

input UpdateTravelInput {
  id: String!
  name: String
  isPublic: Boolean
  img: String
  description: String
  numberOfDays: Int
  moods: MoodInput
}

input LoginUserInput {
  username: String!
  password: String!
}